{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":18644,"sourceType":"datasetVersion","datasetId":13831}],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-29T14:18:14.133870Z","iopub.execute_input":"2024-06-29T14:18:14.134267Z","iopub.status.idle":"2024-06-29T14:18:14.552997Z","shell.execute_reply.started":"2024-06-29T14:18:14.134234Z","shell.execute_reply":"2024-06-29T14:18:14.551904Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"/kaggle/input/churn-modelling/Churn_Modelling.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/churn-modelling/Churn_Modelling.csv\")\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:14.555109Z","iopub.execute_input":"2024-06-29T14:18:14.555744Z","iopub.status.idle":"2024-06-29T14:18:14.623400Z","shell.execute_reply.started":"2024-06-29T14:18:14.555701Z","shell.execute_reply":"2024-06-29T14:18:14.622137Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n0          1    15634602  Hargrave          619    France  Female   42   \n1          2    15647311      Hill          608     Spain  Female   41   \n2          3    15619304      Onio          502    France  Female   42   \n3          4    15701354      Boni          699    France  Female   39   \n4          5    15737888  Mitchell          850     Spain  Female   43   \n\n   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n0       2       0.00              1          1               1   \n1       1   83807.86              1          0               1   \n2       8  159660.80              3          1               0   \n3       1       0.00              2          0               0   \n4       2  125510.82              1          1               1   \n\n   EstimatedSalary  Exited  \n0        101348.88       1  \n1        112542.58       0  \n2        113931.57       1  \n3         93826.63       0  \n4         79084.10       0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>RowNumber</th>\n      <th>CustomerId</th>\n      <th>Surname</th>\n      <th>CreditScore</th>\n      <th>Geography</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>15634602</td>\n      <td>Hargrave</td>\n      <td>619</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>15647311</td>\n      <td>Hill</td>\n      <td>608</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>15619304</td>\n      <td>Onio</td>\n      <td>502</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>15701354</td>\n      <td>Boni</td>\n      <td>699</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>15737888</td>\n      <td>Mitchell</td>\n      <td>850</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:14.624816Z","iopub.execute_input":"2024-06-29T14:18:14.625129Z","iopub.status.idle":"2024-06-29T14:18:14.653160Z","shell.execute_reply.started":"2024-06-29T14:18:14.625102Z","shell.execute_reply":"2024-06-29T14:18:14.651940Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 10000 entries, 0 to 9999\nData columns (total 14 columns):\n #   Column           Non-Null Count  Dtype  \n---  ------           --------------  -----  \n 0   RowNumber        10000 non-null  int64  \n 1   CustomerId       10000 non-null  int64  \n 2   Surname          10000 non-null  object \n 3   CreditScore      10000 non-null  int64  \n 4   Geography        10000 non-null  object \n 5   Gender           10000 non-null  object \n 6   Age              10000 non-null  int64  \n 7   Tenure           10000 non-null  int64  \n 8   Balance          10000 non-null  float64\n 9   NumOfProducts    10000 non-null  int64  \n 10  HasCrCard        10000 non-null  int64  \n 11  IsActiveMember   10000 non-null  int64  \n 12  EstimatedSalary  10000 non-null  float64\n 13  Exited           10000 non-null  int64  \ndtypes: float64(2), int64(9), object(3)\nmemory usage: 1.1+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.duplicated().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:14.658053Z","iopub.execute_input":"2024-06-29T14:18:14.658577Z","iopub.status.idle":"2024-06-29T14:18:14.674423Z","shell.execute_reply.started":"2024-06-29T14:18:14.658540Z","shell.execute_reply":"2024-06-29T14:18:14.673282Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"code","source":"df['Exited'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:14.675795Z","iopub.execute_input":"2024-06-29T14:18:14.676211Z","iopub.status.idle":"2024-06-29T14:18:14.687525Z","shell.execute_reply.started":"2024-06-29T14:18:14.676173Z","shell.execute_reply":"2024-06-29T14:18:14.686136Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"Exited\n0    7963\n1    2037\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Geography'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:14.689278Z","iopub.execute_input":"2024-06-29T14:18:14.689771Z","iopub.status.idle":"2024-06-29T14:18:14.702641Z","shell.execute_reply.started":"2024-06-29T14:18:14.689728Z","shell.execute_reply":"2024-06-29T14:18:14.701527Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"Geography\nFrance     5014\nGermany    2509\nSpain      2477\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Gender'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:14.703965Z","iopub.execute_input":"2024-06-29T14:18:14.704310Z","iopub.status.idle":"2024-06-29T14:18:14.720306Z","shell.execute_reply.started":"2024-06-29T14:18:14.704279Z","shell.execute_reply":"2024-06-29T14:18:14.718836Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"Gender\nMale      5457\nFemale    4543\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df.drop(columns=['RowNumber','CustomerId','Surname'],inplace=True)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:14.722422Z","iopub.execute_input":"2024-06-29T14:18:14.723012Z","iopub.status.idle":"2024-06-29T14:18:14.745701Z","shell.execute_reply.started":"2024-06-29T14:18:14.722971Z","shell.execute_reply":"2024-06-29T14:18:14.744508Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"   CreditScore Geography  Gender  Age  Tenure    Balance  NumOfProducts  \\\n0          619    France  Female   42       2       0.00              1   \n1          608     Spain  Female   41       1   83807.86              1   \n2          502    France  Female   42       8  159660.80              3   \n3          699    France  Female   39       1       0.00              2   \n4          850     Spain  Female   43       2  125510.82              1   \n\n   HasCrCard  IsActiveMember  EstimatedSalary  Exited  \n0          1               1        101348.88       1  \n1          0               1        112542.58       0  \n2          1               0        113931.57       1  \n3          0               0         93826.63       0  \n4          1               1         79084.10       0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Geography</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df =pd.get_dummies(df,columns=['Geography','Gender'],drop_first=True)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:14.747086Z","iopub.execute_input":"2024-06-29T14:18:14.747513Z","iopub.status.idle":"2024-06-29T14:18:14.759599Z","shell.execute_reply.started":"2024-06-29T14:18:14.747474Z","shell.execute_reply":"2024-06-29T14:18:14.758540Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:14.763723Z","iopub.execute_input":"2024-06-29T14:18:14.764367Z","iopub.status.idle":"2024-06-29T14:18:14.781710Z","shell.execute_reply.started":"2024-06-29T14:18:14.764333Z","shell.execute_reply":"2024-06-29T14:18:14.780479Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"   CreditScore  Age  Tenure    Balance  NumOfProducts  HasCrCard  \\\n0          619   42       2       0.00              1          1   \n1          608   41       1   83807.86              1          0   \n2          502   42       8  159660.80              3          1   \n3          699   39       1       0.00              2          0   \n4          850   43       2  125510.82              1          1   \n\n   IsActiveMember  EstimatedSalary  Exited  Geography_Germany  \\\n0               1        101348.88       1              False   \n1               1        112542.58       0              False   \n2               0        113931.57       1              False   \n3               0         93826.63       0              False   \n4               1         79084.10       0              False   \n\n   Geography_Spain  Gender_Male  \n0            False        False  \n1             True        False  \n2            False        False  \n3            False        False  \n4             True        False  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n      <th>Geography_Germany</th>\n      <th>Geography_Spain</th>\n      <th>Gender_Male</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(df.drop(columns=['Exited']),df['Exited'],test_size=0.2,random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:14.783161Z","iopub.execute_input":"2024-06-29T14:18:14.783679Z","iopub.status.idle":"2024-06-29T14:18:15.511292Z","shell.execute_reply.started":"2024-06-29T14:18:14.783642Z","shell.execute_reply":"2024-06-29T14:18:15.509886Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"X_train.shape\n","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:15.512897Z","iopub.execute_input":"2024-06-29T14:18:15.513272Z","iopub.status.idle":"2024-06-29T14:18:15.520830Z","shell.execute_reply.started":"2024-06-29T14:18:15.513238Z","shell.execute_reply":"2024-06-29T14:18:15.519476Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"(8000, 11)"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\n\nX_train_scaled=scaler.fit_transform(X_train)\nX_test_scaled=scaler.transform(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:15.522532Z","iopub.execute_input":"2024-06-29T14:18:15.523002Z","iopub.status.idle":"2024-06-29T14:18:15.545257Z","shell.execute_reply.started":"2024-06-29T14:18:15.522962Z","shell.execute_reply":"2024-06-29T14:18:15.543866Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"X_train_scaled","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:15.546908Z","iopub.execute_input":"2024-06-29T14:18:15.547278Z","iopub.status.idle":"2024-06-29T14:18:15.555491Z","shell.execute_reply.started":"2024-06-29T14:18:15.547245Z","shell.execute_reply":"2024-06-29T14:18:15.554302Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"array([[ 0.35649971, -0.6557859 ,  0.34567966, ..., -0.57946723,\n        -0.57638802,  0.91324755],\n       [-0.20389777,  0.29493847, -0.3483691 , ...,  1.72572313,\n        -0.57638802,  0.91324755],\n       [-0.96147213, -1.41636539, -0.69539349, ..., -0.57946723,\n         1.73494238,  0.91324755],\n       ...,\n       [ 0.86500853, -0.08535128, -1.38944225, ..., -0.57946723,\n        -0.57638802, -1.09499335],\n       [ 0.15932282,  0.3900109 ,  1.03972843, ..., -0.57946723,\n        -0.57638802,  0.91324755],\n       [ 0.47065475,  1.15059039, -1.38944225, ...,  1.72572313,\n        -0.57638802,  0.91324755]])"},"metadata":{}}]},{"cell_type":"code","source":"import tensorflow\nfrom tensorflow import keras \nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:18:15.556957Z","iopub.execute_input":"2024-06-29T14:18:15.557299Z","iopub.status.idle":"2024-06-29T14:18:30.727614Z","shell.execute_reply.started":"2024-06-29T14:18:15.557268Z","shell.execute_reply":"2024-06-29T14:18:30.726390Z"},"trusted":true},"execution_count":16,"outputs":[{"name":"stderr","text":"2024-06-29 14:18:18.168382: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-06-29 14:18:18.168730: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-06-29 14:18:18.358450: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}]},{"cell_type":"code","source":"model = Sequential()\nmodel.add(Dense(3,activation='sigmoid',input_dim=11))\nmodel.add(Dense(1,activation='sigmoid'))\n","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:20:45.000125Z","iopub.execute_input":"2024-06-29T14:20:45.000567Z","iopub.status.idle":"2024-06-29T14:20:45.080316Z","shell.execute_reply.started":"2024-06-29T14:20:45.000531Z","shell.execute_reply":"2024-06-29T14:20:45.079154Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"}]},{"cell_type":"code","source":"model.summary()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:20:53.156903Z","iopub.execute_input":"2024-06-29T14:20:53.157292Z","iopub.status.idle":"2024-06-29T14:20:53.178986Z","shell.execute_reply.started":"2024-06-29T14:20:53.157264Z","shell.execute_reply":"2024-06-29T14:20:53.177818Z"},"trusted":true},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_1\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_1\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m3\u001b[0m)              │            \u001b[38;5;34m36\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m4\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">36</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">4</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m40\u001b[0m (160.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">40</span> (160.00 B)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m40\u001b[0m (160.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">40</span> (160.00 B)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"model.compile(loss='binary_crossentropy',optimizer='Adam')\n","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:25:34.863170Z","iopub.execute_input":"2024-06-29T14:25:34.863937Z","iopub.status.idle":"2024-06-29T14:25:34.880369Z","shell.execute_reply.started":"2024-06-29T14:25:34.863897Z","shell.execute_reply":"2024-06-29T14:25:34.879268Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"model.fit(X_train_scaled,y_train,epochs=10)","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:26:48.358416Z","iopub.execute_input":"2024-06-29T14:26:48.358842Z","iopub.status.idle":"2024-06-29T14:26:53.248009Z","shell.execute_reply.started":"2024-06-29T14:26:48.358810Z","shell.execute_reply":"2024-06-29T14:26:53.246771Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m250/250\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1ms/step - loss: 0.5263\nEpoch 2/10\n\u001b[1m250/250\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - loss: 0.4813\nEpoch 3/10\n\u001b[1m250/250\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - loss: 0.4670\nEpoch 4/10\n\u001b[1m250/250\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - loss: 0.4615\nEpoch 5/10\n\u001b[1m250/250\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - loss: 0.4524\nEpoch 6/10\n\u001b[1m250/250\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - loss: 0.4394\nEpoch 7/10\n\u001b[1m250/250\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1ms/step - loss: 0.4284\nEpoch 8/10\n\u001b[1m250/250\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1ms/step - loss: 0.4374\nEpoch 9/10\n\u001b[1m250/250\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - loss: 0.4235\nEpoch 10/10\n\u001b[1m250/250\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - loss: 0.4245\n","output_type":"stream"},{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x7ff2a8c08220>"},"metadata":{}}]},{"cell_type":"code","source":"model.layers[0].get_weights()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:27:53.693748Z","iopub.execute_input":"2024-06-29T14:27:53.694259Z","iopub.status.idle":"2024-06-29T14:27:53.712795Z","shell.execute_reply.started":"2024-06-29T14:27:53.694214Z","shell.execute_reply":"2024-06-29T14:27:53.711501Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"[array([[ 0.17184176, -0.04941336, -0.09862777],\n        [-0.7669021 , -0.5520883 ,  1.8911452 ],\n        [ 0.08511077,  0.14534967,  0.15307306],\n        [-0.42908198,  0.41397965,  0.25873277],\n        [-0.33104652,  1.5585506 ,  0.19139563],\n        [ 0.08091789, -0.19517651, -0.08941881],\n        [ 0.7973287 ,  0.36555433, -0.2097564 ],\n        [ 0.17409557, -0.2567937 , -0.02233838],\n        [-0.20418961, -0.7478854 ,  0.36152497],\n        [ 0.04608439, -0.0360051 ,  0.16252397],\n        [ 0.53139204,  0.06088718, -0.25844026]], dtype=float32),\n array([ 0.34131187,  0.77645874, -0.27411324], dtype=float32)]"},"metadata":{}}]},{"cell_type":"code","source":"model.layers[1].get_weights()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:28:20.400844Z","iopub.execute_input":"2024-06-29T14:28:20.401258Z","iopub.status.idle":"2024-06-29T14:28:20.412156Z","shell.execute_reply.started":"2024-06-29T14:28:20.401225Z","shell.execute_reply":"2024-06-29T14:28:20.410765Z"},"trusted":true},"execution_count":24,"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"[array([[-1.756903 ],\n        [-1.3807682],\n        [ 0.9550283]], dtype=float32),\n array([-0.16222596], dtype=float32)]"},"metadata":{}}]},{"cell_type":"code","source":"y_log = model.predict(X_test_scaled)","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:29:41.802864Z","iopub.execute_input":"2024-06-29T14:29:41.803837Z","iopub.status.idle":"2024-06-29T14:29:41.975460Z","shell.execute_reply.started":"2024-06-29T14:29:41.803798Z","shell.execute_reply":"2024-06-29T14:29:41.974155Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"y_pred = np.where(y_log>0.5,1,0)","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:30:08.537901Z","iopub.execute_input":"2024-06-29T14:30:08.538314Z","iopub.status.idle":"2024-06-29T14:30:08.544863Z","shell.execute_reply.started":"2024-06-29T14:30:08.538280Z","shell.execute_reply":"2024-06-29T14:30:08.543198Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score\n","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:30:42.006816Z","iopub.execute_input":"2024-06-29T14:30:42.007219Z","iopub.status.idle":"2024-06-29T14:30:42.012475Z","shell.execute_reply.started":"2024-06-29T14:30:42.007191Z","shell.execute_reply":"2024-06-29T14:30:42.011165Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"code","source":"accuracy_score(y_test,y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:31:16.792270Z","iopub.execute_input":"2024-06-29T14:31:16.792740Z","iopub.status.idle":"2024-06-29T14:31:16.803816Z","shell.execute_reply.started":"2024-06-29T14:31:16.792705Z","shell.execute_reply":"2024-06-29T14:31:16.802776Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"0.817"},"metadata":{}}]},{"cell_type":"code","source":"#We can increase the number of epoch for better output.\n#We can change the activation function to relu for better output.\n#We can increase the number of nodes in the hidden layer.\n","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:34:25.132829Z","iopub.execute_input":"2024-06-29T14:34:25.133827Z","iopub.status.idle":"2024-06-29T14:34:25.139097Z","shell.execute_reply.started":"2024-06-29T14:34:25.133775Z","shell.execute_reply":"2024-06-29T14:34:25.137796Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"model2 = Sequential()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T14:34:35.004375Z","iopub.execute_input":"2024-06-29T14:34:35.004819Z","iopub.status.idle":"2024-06-29T14:34:35.012045Z","shell.execute_reply.started":"2024-06-29T14:34:35.004786Z","shell.execute_reply":"2024-06-29T14:34:35.010613Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"model2.add(Dense(11,activation='relu',input_dim=11))\nmodel2.add(Dense(11,activation='relu'))\nmodel2.add(Dense(1,activation='sigmoid'))\n","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:00:24.908070Z","iopub.execute_input":"2024-06-29T15:00:24.908507Z","iopub.status.idle":"2024-06-29T15:00:24.955251Z","shell.execute_reply.started":"2024-06-29T15:00:24.908453Z","shell.execute_reply":"2024-06-29T15:00:24.953888Z"},"trusted":true},"execution_count":65,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"}]},{"cell_type":"code","source":"model2.summary()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:00:25.982901Z","iopub.execute_input":"2024-06-29T15:00:25.983273Z","iopub.status.idle":"2024-06-29T15:00:26.009093Z","shell.execute_reply.started":"2024-06-29T15:00:25.983244Z","shell.execute_reply":"2024-06-29T15:00:26.008067Z"},"trusted":true},"execution_count":66,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_2\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_2\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense_4 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m11\u001b[0m)             │           \u001b[38;5;34m132\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_5 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m11\u001b[0m)             │           \u001b[38;5;34m132\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_6 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m12\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_7 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m11\u001b[0m)             │            \u001b[38;5;34m22\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_8 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m11\u001b[0m)             │           \u001b[38;5;34m132\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_9 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m12\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">11</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">132</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">11</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">132</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">11</span>)             │            <span style=\"color: #00af00; text-decoration-color: #00af00\">22</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_8 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">11</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">132</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m996\u001b[0m (3.89 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">996</span> (3.89 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m442\u001b[0m (1.73 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">442</span> (1.73 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Optimizer params: \u001b[0m\u001b[38;5;34m554\u001b[0m (2.17 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Optimizer params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">554</span> (2.17 KB)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"model2.compile(loss='binary_crossentropy',optimizer='Adam',metrics=['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:00:29.872324Z","iopub.execute_input":"2024-06-29T15:00:29.872881Z","iopub.status.idle":"2024-06-29T15:00:29.885217Z","shell.execute_reply.started":"2024-06-29T15:00:29.872840Z","shell.execute_reply":"2024-06-29T15:00:29.883970Z"},"trusted":true},"execution_count":67,"outputs":[]},{"cell_type":"code","source":"history = model2.fit(X_train_scaled,y_train,epochs=100,validation_split=0.2)\n#Our training as well as validation accuracy should increase.\n#It is overfitting if training accuracy increases but validation accuracy decreases.","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:00:38.682563Z","iopub.execute_input":"2024-06-29T15:00:38.682975Z","iopub.status.idle":"2024-06-29T15:01:25.301719Z","shell.execute_reply.started":"2024-06-29T15:00:38.682944Z","shell.execute_reply":"2024-06-29T15:01:25.300293Z"},"trusted":true},"execution_count":68,"outputs":[{"name":"stdout","text":"Epoch 1/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.7982 - loss: 0.6389 - val_accuracy: 0.7987 - val_loss: 0.5060\nEpoch 2/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7945 - loss: 0.5065 - val_accuracy: 0.7987 - val_loss: 0.4903\nEpoch 3/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7901 - loss: 0.4988 - val_accuracy: 0.7987 - val_loss: 0.4820\nEpoch 4/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8011 - loss: 0.4766 - val_accuracy: 0.7987 - val_loss: 0.4764\nEpoch 5/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7961 - loss: 0.4744 - val_accuracy: 0.7987 - val_loss: 0.4663\nEpoch 6/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7943 - loss: 0.4623 - val_accuracy: 0.7987 - val_loss: 0.4488\nEpoch 7/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8023 - loss: 0.4373 - val_accuracy: 0.7987 - val_loss: 0.4400\nEpoch 8/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7898 - loss: 0.4426 - val_accuracy: 0.7987 - val_loss: 0.4344\nEpoch 9/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8102 - loss: 0.4204 - val_accuracy: 0.8281 - val_loss: 0.4331\nEpoch 10/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8228 - loss: 0.4290 - val_accuracy: 0.8238 - val_loss: 0.4335\nEpoch 11/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8298 - loss: 0.4233 - val_accuracy: 0.8288 - val_loss: 0.4298\nEpoch 12/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8331 - loss: 0.4231 - val_accuracy: 0.8300 - val_loss: 0.4288\nEpoch 13/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8313 - loss: 0.4133 - val_accuracy: 0.8288 - val_loss: 0.4276\nEpoch 14/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8264 - loss: 0.4324 - val_accuracy: 0.8294 - val_loss: 0.4269\nEpoch 15/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8313 - loss: 0.4212 - val_accuracy: 0.8294 - val_loss: 0.4257\nEpoch 16/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8226 - loss: 0.4265 - val_accuracy: 0.8263 - val_loss: 0.4253\nEpoch 17/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8259 - loss: 0.4252 - val_accuracy: 0.8269 - val_loss: 0.4248\nEpoch 18/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8356 - loss: 0.4163 - val_accuracy: 0.8281 - val_loss: 0.4242\nEpoch 19/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8336 - loss: 0.4206 - val_accuracy: 0.8288 - val_loss: 0.4240\nEpoch 20/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8354 - loss: 0.4143 - val_accuracy: 0.8281 - val_loss: 0.4240\nEpoch 21/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8384 - loss: 0.4119 - val_accuracy: 0.8244 - val_loss: 0.4236\nEpoch 22/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8258 - loss: 0.4265 - val_accuracy: 0.8256 - val_loss: 0.4225\nEpoch 23/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8326 - loss: 0.4240 - val_accuracy: 0.8269 - val_loss: 0.4222\nEpoch 24/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8407 - loss: 0.4019 - val_accuracy: 0.8319 - val_loss: 0.4220\nEpoch 25/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8334 - loss: 0.4101 - val_accuracy: 0.8281 - val_loss: 0.4209\nEpoch 26/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8366 - loss: 0.4098 - val_accuracy: 0.8294 - val_loss: 0.4205\nEpoch 27/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8344 - loss: 0.4106 - val_accuracy: 0.8300 - val_loss: 0.4201\nEpoch 28/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8325 - loss: 0.4145 - val_accuracy: 0.8294 - val_loss: 0.4199\nEpoch 29/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8387 - loss: 0.4085 - val_accuracy: 0.8319 - val_loss: 0.4194\nEpoch 30/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8368 - loss: 0.4048 - val_accuracy: 0.8300 - val_loss: 0.4197\nEpoch 31/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8364 - loss: 0.4147 - val_accuracy: 0.8288 - val_loss: 0.4196\nEpoch 32/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8360 - loss: 0.4126 - val_accuracy: 0.8331 - val_loss: 0.4178\nEpoch 33/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8389 - loss: 0.4100 - val_accuracy: 0.8300 - val_loss: 0.4188\nEpoch 34/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8323 - loss: 0.4191 - val_accuracy: 0.8338 - val_loss: 0.4173\nEpoch 35/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8404 - loss: 0.4076 - val_accuracy: 0.8319 - val_loss: 0.4172\nEpoch 36/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8297 - loss: 0.4169 - val_accuracy: 0.8319 - val_loss: 0.4171\nEpoch 37/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8346 - loss: 0.4121 - val_accuracy: 0.8300 - val_loss: 0.4166\nEpoch 38/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8332 - loss: 0.4198 - val_accuracy: 0.8325 - val_loss: 0.4168\nEpoch 39/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8420 - loss: 0.4074 - val_accuracy: 0.8313 - val_loss: 0.4170\nEpoch 40/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8281 - loss: 0.4235 - val_accuracy: 0.8325 - val_loss: 0.4160\nEpoch 41/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8395 - loss: 0.4129 - val_accuracy: 0.8319 - val_loss: 0.4165\nEpoch 42/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8389 - loss: 0.4056 - val_accuracy: 0.8331 - val_loss: 0.4161\nEpoch 43/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8441 - loss: 0.4007 - val_accuracy: 0.8313 - val_loss: 0.4162\nEpoch 44/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8418 - loss: 0.4051 - val_accuracy: 0.8306 - val_loss: 0.4158\nEpoch 45/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8353 - loss: 0.4175 - val_accuracy: 0.8325 - val_loss: 0.4156\nEpoch 46/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8379 - loss: 0.4086 - val_accuracy: 0.8306 - val_loss: 0.4158\nEpoch 47/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8328 - loss: 0.4105 - val_accuracy: 0.8313 - val_loss: 0.4149\nEpoch 48/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8377 - loss: 0.4168 - val_accuracy: 0.8319 - val_loss: 0.4155\nEpoch 49/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8380 - loss: 0.4162 - val_accuracy: 0.8288 - val_loss: 0.4156\nEpoch 50/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8379 - loss: 0.4111 - val_accuracy: 0.8306 - val_loss: 0.4159\nEpoch 51/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8398 - loss: 0.4112 - val_accuracy: 0.8331 - val_loss: 0.4160\nEpoch 52/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8397 - loss: 0.4103 - val_accuracy: 0.8319 - val_loss: 0.4157\nEpoch 53/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8398 - loss: 0.4070 - val_accuracy: 0.8313 - val_loss: 0.4150\nEpoch 54/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8457 - loss: 0.3986 - val_accuracy: 0.8313 - val_loss: 0.4168\nEpoch 55/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8450 - loss: 0.3966 - val_accuracy: 0.8250 - val_loss: 0.4163\nEpoch 56/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8379 - loss: 0.4077 - val_accuracy: 0.8319 - val_loss: 0.4160\nEpoch 57/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8435 - loss: 0.4045 - val_accuracy: 0.8300 - val_loss: 0.4156\nEpoch 58/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8425 - loss: 0.4023 - val_accuracy: 0.8288 - val_loss: 0.4158\nEpoch 59/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8428 - loss: 0.4048 - val_accuracy: 0.8294 - val_loss: 0.4173\nEpoch 60/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8376 - loss: 0.4119 - val_accuracy: 0.8288 - val_loss: 0.4158\nEpoch 61/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8413 - loss: 0.4081 - val_accuracy: 0.8306 - val_loss: 0.4147\nEpoch 62/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8509 - loss: 0.3902 - val_accuracy: 0.8319 - val_loss: 0.4145\nEpoch 63/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8495 - loss: 0.3963 - val_accuracy: 0.8288 - val_loss: 0.4144\nEpoch 64/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8407 - loss: 0.4064 - val_accuracy: 0.8300 - val_loss: 0.4154\nEpoch 65/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8532 - loss: 0.3982 - val_accuracy: 0.8313 - val_loss: 0.4153\nEpoch 66/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8494 - loss: 0.3995 - val_accuracy: 0.8306 - val_loss: 0.4148\nEpoch 67/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8506 - loss: 0.3940 - val_accuracy: 0.8325 - val_loss: 0.4152\nEpoch 68/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8386 - loss: 0.4100 - val_accuracy: 0.8319 - val_loss: 0.4138\nEpoch 69/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8412 - loss: 0.4068 - val_accuracy: 0.8306 - val_loss: 0.4144\nEpoch 70/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8322 - loss: 0.4225 - val_accuracy: 0.8294 - val_loss: 0.4148\nEpoch 71/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8451 - loss: 0.4001 - val_accuracy: 0.8331 - val_loss: 0.4142\nEpoch 72/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8462 - loss: 0.4062 - val_accuracy: 0.8281 - val_loss: 0.4148\nEpoch 73/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8389 - loss: 0.4160 - val_accuracy: 0.8331 - val_loss: 0.4139\nEpoch 74/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8423 - loss: 0.4093 - val_accuracy: 0.8300 - val_loss: 0.4145\nEpoch 75/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8415 - loss: 0.4057 - val_accuracy: 0.8319 - val_loss: 0.4128\nEpoch 76/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8446 - loss: 0.4034 - val_accuracy: 0.8300 - val_loss: 0.4137\nEpoch 77/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8494 - loss: 0.3976 - val_accuracy: 0.8313 - val_loss: 0.4149\nEpoch 78/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8445 - loss: 0.4041 - val_accuracy: 0.8306 - val_loss: 0.4143\nEpoch 79/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8501 - loss: 0.3984 - val_accuracy: 0.8306 - val_loss: 0.4136\nEpoch 80/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8443 - loss: 0.4044 - val_accuracy: 0.8319 - val_loss: 0.4159\nEpoch 81/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8422 - loss: 0.4097 - val_accuracy: 0.8306 - val_loss: 0.4143\nEpoch 82/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8546 - loss: 0.3911 - val_accuracy: 0.8306 - val_loss: 0.4139\nEpoch 83/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8470 - loss: 0.4055 - val_accuracy: 0.8325 - val_loss: 0.4140\nEpoch 84/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8468 - loss: 0.4009 - val_accuracy: 0.8288 - val_loss: 0.4139\nEpoch 85/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8443 - loss: 0.4051 - val_accuracy: 0.8306 - val_loss: 0.4131\nEpoch 86/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8568 - loss: 0.3870 - val_accuracy: 0.8288 - val_loss: 0.4138\nEpoch 87/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8530 - loss: 0.3923 - val_accuracy: 0.8319 - val_loss: 0.4134\nEpoch 88/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8468 - loss: 0.4010 - val_accuracy: 0.8325 - val_loss: 0.4135\nEpoch 89/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8523 - loss: 0.3948 - val_accuracy: 0.8306 - val_loss: 0.4149\nEpoch 90/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8397 - loss: 0.4112 - val_accuracy: 0.8300 - val_loss: 0.4147\nEpoch 91/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8395 - loss: 0.4128 - val_accuracy: 0.8313 - val_loss: 0.4133\nEpoch 92/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8519 - loss: 0.3898 - val_accuracy: 0.8300 - val_loss: 0.4157\nEpoch 93/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8410 - loss: 0.4080 - val_accuracy: 0.8300 - val_loss: 0.4153\nEpoch 94/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8566 - loss: 0.3835 - val_accuracy: 0.8294 - val_loss: 0.4151\nEpoch 95/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8493 - loss: 0.3941 - val_accuracy: 0.8313 - val_loss: 0.4146\nEpoch 96/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8398 - loss: 0.4108 - val_accuracy: 0.8288 - val_loss: 0.4145\nEpoch 97/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8501 - loss: 0.3963 - val_accuracy: 0.8331 - val_loss: 0.4149\nEpoch 98/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8528 - loss: 0.3853 - val_accuracy: 0.8313 - val_loss: 0.4152\nEpoch 99/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8461 - loss: 0.4020 - val_accuracy: 0.8331 - val_loss: 0.4150\nEpoch 100/100\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8445 - loss: 0.4086 - val_accuracy: 0.8306 - val_loss: 0.4150\n","output_type":"stream"}]},{"cell_type":"code","source":"model2.layers[0].get_weights()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:01:29.075581Z","iopub.execute_input":"2024-06-29T15:01:29.075999Z","iopub.status.idle":"2024-06-29T15:01:29.086999Z","shell.execute_reply.started":"2024-06-29T15:01:29.075964Z","shell.execute_reply":"2024-06-29T15:01:29.085719Z"},"trusted":true},"execution_count":69,"outputs":[{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"[array([[-4.7309484e-02, -1.2627648e-01, -2.0169601e-01,  2.4822070e-01,\n          1.7576699e-01, -1.3272460e-01, -4.3155840e-01,  1.4555624e-01,\n          1.0863071e-03,  5.5270439e-01, -3.6906055e-01],\n        [-4.8106930e-01, -8.3360082e-01, -8.0922073e-01, -6.6858494e-01,\n          4.9997938e-01,  1.3312478e+00, -6.8051863e-01,  1.6309166e-01,\n          9.0709770e-01, -1.1877469e+00,  5.2363211e-01],\n        [-2.2889417e-01, -2.4859959e-02, -2.4526332e-01,  1.3972989e-01,\n         -2.4155505e-02, -8.5832112e-02, -4.2678946e-01,  5.4657906e-02,\n         -3.4495360e-01,  2.8794748e-01, -5.1879066e-01],\n        [-3.3042768e-01,  3.5064843e-01, -3.6715981e-01, -1.1544250e-01,\n         -2.2085772e-01,  1.3430691e-01, -1.8472666e-01,  7.3351502e-01,\n          5.7118171e-01, -7.0053893e-01, -6.7977220e-01],\n        [-3.8963416e-01,  1.5410323e+00, -9.1284133e-02, -7.0821291e-01,\n         -6.0133260e-01,  2.4476701e-02, -9.2531097e-01, -1.3183391e+00,\n         -7.5811869e-01,  1.7771429e+00,  4.0035650e-01],\n        [-5.2671902e-02,  2.9719955e-01, -9.4608569e-01,  2.9866275e-01,\n          9.6546598e-02,  3.2198760e-01, -6.1577195e-03,  3.4711978e-01,\n          5.4240090e-01, -6.4972550e-01, -8.8885434e-02],\n        [-5.1497024e-01, -3.5425711e-02, -1.1685564e-01,  1.1825517e-02,\n         -9.4127643e-01,  6.9038326e-01,  4.3350387e-01,  3.4427816e-01,\n         -3.5266128e-01,  1.1066504e-01, -5.2466817e-02],\n        [ 1.0968437e-01,  2.6194116e-01, -5.0688964e-01, -7.6399213e-03,\n         -2.0076212e-01,  6.6959038e-02, -5.3590798e-01, -2.1830018e-01,\n          4.1461119e-01, -1.7855227e-01, -4.2488247e-01],\n        [ 3.5094044e-01, -1.9922027e-01, -9.4798434e-01, -7.6115543e-01,\n          8.6942807e-02, -4.2198226e-01, -7.2892047e-02, -8.5482731e-02,\n          9.2312060e-03, -1.3134022e-01,  1.8648966e-01],\n        [-1.3962688e+00, -2.1106005e-01, -6.9176100e-02,  2.4318197e-01,\n         -3.9613716e-02, -1.2305005e-01,  7.1991521e-01,  5.0322689e-02,\n         -2.1127823e-01,  3.7877408e-01,  9.8820649e-02],\n        [ 9.0831198e-02, -2.0620862e-01, -3.1587610e-01,  7.0075625e-01,\n          1.8106674e-01,  7.2374111e-01,  7.9423964e-02, -1.9907691e-02,\n         -2.7170295e-01,  1.8105672e-01, -2.7614656e-01]], dtype=float32),\n array([ 0.5832665 ,  0.2908389 ,  0.8457188 ,  0.6828213 , -0.10040627,\n        -0.66404307, -0.1846216 ,  0.42634207,  0.65069056,  0.16272523,\n         0.37654638], dtype=float32)]"},"metadata":{}}]},{"cell_type":"code","source":"model2.layers[1].get_weights()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:01:29.859989Z","iopub.execute_input":"2024-06-29T15:01:29.860424Z","iopub.status.idle":"2024-06-29T15:01:29.872249Z","shell.execute_reply.started":"2024-06-29T15:01:29.860389Z","shell.execute_reply":"2024-06-29T15:01:29.870841Z"},"trusted":true},"execution_count":70,"outputs":[{"execution_count":70,"output_type":"execute_result","data":{"text/plain":"[array([[ 0.37423664,  0.6763165 , -0.12090805, -1.3670604 , -1.695634  ,\n          0.5024964 ,  0.27972248,  0.04758811, -0.0339139 ,  0.8199053 ,\n          0.11595292],\n        [-0.37675735,  0.6056968 ,  0.09164977, -0.02477829, -1.3022412 ,\n         -1.6118078 ,  0.11600154, -0.29682893, -0.630093  ,  1.20119   ,\n         -0.33380812],\n        [ 0.35515732,  0.459237  ,  0.6729357 , -0.32819128, -1.9054023 ,\n         -2.7050824 , -0.29265258,  0.4745643 , -0.20700541, -0.3267926 ,\n         -0.28289923],\n        [ 0.6717766 ,  0.753754  , -1.9302673 , -0.49895152,  0.02591325,\n         -0.37167573, -0.19357008,  0.3013644 ,  0.09529909, -0.20081297,\n         -0.1644527 ],\n        [ 0.20911671, -0.41039124, -2.4939685 , -0.66512316, -2.1208599 ,\n         -0.37466854, -1.0923133 ,  0.07232828, -0.41782442, -0.17828937,\n          0.4395477 ],\n        [-0.20588034, -0.6949327 , -0.50842124,  0.8949685 ,  0.26786426,\n          0.67520607, -0.11588439,  0.09081618, -0.23624073,  0.32646978,\n         -0.6750812 ],\n        [ 0.9323422 ,  0.40614265, -0.07641444,  0.0765638 , -1.0288801 ,\n         -0.12037238,  0.0526851 , -1.074143  , -0.14502655,  0.07426553,\n         -0.6194013 ],\n        [ 0.02894973,  0.3466207 , -1.6406828 ,  0.30812252,  0.1112045 ,\n          0.6494676 ,  0.17818785, -1.1215767 , -0.675476  , -1.1478401 ,\n         -0.09341697],\n        [-0.32996738,  0.14449768,  0.2919024 , -0.42396018, -0.30651614,\n         -0.8942279 , -1.266021  , -0.12056997, -0.12835899, -0.78298795,\n          0.48978734],\n        [ 0.23374875,  0.30401486, -0.6642777 ,  0.41850215,  0.8410584 ,\n          0.31771743, -0.36973235,  0.694462  , -0.30658364,  1.0695107 ,\n          0.24193914],\n        [ 0.5159587 , -0.71031076,  0.225714  ,  0.418886  ,  0.10435939,\n          0.2888324 , -0.37019137, -1.4130162 , -0.13880181,  0.40191936,\n         -0.15141407]], dtype=float32),\n array([ 0.98807067, -0.6244695 , -0.2635    , -0.05886113, -0.20158432,\n        -0.90582675, -0.17386277,  0.48935774,  0.29126364, -0.36723065,\n         0.98513603], dtype=float32)]"},"metadata":{}}]},{"cell_type":"code","source":"model2.layers[2].get_weights()","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:01:30.650157Z","iopub.execute_input":"2024-06-29T15:01:30.650572Z","iopub.status.idle":"2024-06-29T15:01:30.659802Z","shell.execute_reply.started":"2024-06-29T15:01:30.650538Z","shell.execute_reply":"2024-06-29T15:01:30.658518Z"},"trusted":true},"execution_count":71,"outputs":[{"execution_count":71,"output_type":"execute_result","data":{"text/plain":"[array([[-0.41066778],\n        [ 1.7643316 ],\n        [-3.0022962 ],\n        [ 1.7248095 ],\n        [-1.5628564 ],\n        [-1.5894971 ],\n        [ 1.6743778 ],\n        [-1.419925  ],\n        [-0.14869389],\n        [ 2.5576048 ],\n        [-0.6828855 ]], dtype=float32),\n array([-0.5203745], dtype=float32)]"},"metadata":{}}]},{"cell_type":"code","source":"y2_log = model2.predict(X_test_scaled)","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:01:31.760872Z","iopub.execute_input":"2024-06-29T15:01:31.761302Z","iopub.status.idle":"2024-06-29T15:01:32.087749Z","shell.execute_reply.started":"2024-06-29T15:01:31.761267Z","shell.execute_reply":"2024-06-29T15:01:32.086511Z"},"trusted":true},"execution_count":72,"outputs":[{"name":"stdout","text":"\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"y2_pred = np.where(y2_log>0.5,1,0)","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:01:35.006905Z","iopub.execute_input":"2024-06-29T15:01:35.007294Z","iopub.status.idle":"2024-06-29T15:01:35.013108Z","shell.execute_reply.started":"2024-06-29T15:01:35.007264Z","shell.execute_reply":"2024-06-29T15:01:35.011821Z"},"trusted":true},"execution_count":73,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test,y2_pred)","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:01:39.661146Z","iopub.execute_input":"2024-06-29T15:01:39.661596Z","iopub.status.idle":"2024-06-29T15:01:39.671028Z","shell.execute_reply.started":"2024-06-29T15:01:39.661556Z","shell.execute_reply":"2024-06-29T15:01:39.669872Z"},"trusted":true},"execution_count":74,"outputs":[{"execution_count":74,"output_type":"execute_result","data":{"text/plain":"0.837"},"metadata":{}}]},{"cell_type":"code","source":"#We should plot the graph of any stage to get idea about the performance of the neural network.","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:01:41.270347Z","iopub.execute_input":"2024-06-29T15:01:41.271638Z","iopub.status.idle":"2024-06-29T15:01:41.276018Z","shell.execute_reply.started":"2024-06-29T15:01:41.271590Z","shell.execute_reply":"2024-06-29T15:01:41.274864Z"},"trusted":true},"execution_count":75,"outputs":[]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:01:44.673221Z","iopub.execute_input":"2024-06-29T15:01:44.673644Z","iopub.status.idle":"2024-06-29T15:01:44.679288Z","shell.execute_reply.started":"2024-06-29T15:01:44.673607Z","shell.execute_reply":"2024-06-29T15:01:44.678058Z"},"trusted":true},"execution_count":76,"outputs":[]},{"cell_type":"code","source":"history.history\n#We get a dictionary of the accuracy,loss,validation_accuracy.validation_loss of all the epochs.","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:01:46.512191Z","iopub.execute_input":"2024-06-29T15:01:46.512627Z","iopub.status.idle":"2024-06-29T15:01:46.525266Z","shell.execute_reply.started":"2024-06-29T15:01:46.512592Z","shell.execute_reply":"2024-06-29T15:01:46.524024Z"},"trusted":true},"execution_count":77,"outputs":[{"execution_count":77,"output_type":"execute_result","data":{"text/plain":"{'accuracy': [0.7934374809265137,\n  0.7934374809265137,\n  0.7934374809265137,\n  0.7934374809265137,\n  0.7934374809265137,\n  0.7934374809265137,\n  0.7934374809265137,\n  0.7934374809265137,\n  0.8157812356948853,\n  0.8264062404632568,\n  0.8259375095367432,\n  0.8295312523841858,\n  0.8278124928474426,\n  0.8293750286102295,\n  0.8298437595367432,\n  0.8285937309265137,\n  0.8304687738418579,\n  0.831250011920929,\n  0.8315625190734863,\n  0.8310937285423279,\n  0.8314062356948853,\n  0.8331249952316284,\n  0.8348437547683716,\n  0.8340625166893005,\n  0.8342187404632568,\n  0.8332812786102295,\n  0.832812488079071,\n  0.8348437547683716,\n  0.8342187404632568,\n  0.8342187404632568,\n  0.8365625143051147,\n  0.836718738079071,\n  0.836718738079071,\n  0.8364062309265137,\n  0.8371875286102295,\n  0.8362500071525574,\n  0.8374999761581421,\n  0.8379687666893005,\n  0.8389062285423279,\n  0.8393750190734863,\n  0.8392187356948853,\n  0.8387500047683716,\n  0.8393750190734863,\n  0.8393750190734863,\n  0.8412500023841858,\n  0.840624988079071,\n  0.8396875262260437,\n  0.8409374952316284,\n  0.8412500023841858,\n  0.8410937786102295,\n  0.8421875238418579,\n  0.8418750166893005,\n  0.8423437476158142,\n  0.842968761920929,\n  0.8412500023841858,\n  0.8421875238418579,\n  0.8418750166893005,\n  0.8428124785423279,\n  0.8421875238418579,\n  0.8415625095367432,\n  0.8434374928474426,\n  0.8434374928474426,\n  0.844531238079071,\n  0.8443750143051147,\n  0.8435937762260437,\n  0.8434374928474426,\n  0.8435937762260437,\n  0.8439062237739563,\n  0.8439062237739563,\n  0.8442187309265137,\n  0.84375,\n  0.8459374904632568,\n  0.8443750143051147,\n  0.8456249833106995,\n  0.8450000286102295,\n  0.8462499976158142,\n  0.8462499976158142,\n  0.8442187309265137,\n  0.8457812666893005,\n  0.8460937738418579,\n  0.8451562523841858,\n  0.8471875190734863,\n  0.8460937738418579,\n  0.8470312356948853,\n  0.8448437452316284,\n  0.8465625047683716,\n  0.8459374904632568,\n  0.8470312356948853,\n  0.8465625047683716,\n  0.8450000286102295,\n  0.8462499976158142,\n  0.8457812666893005,\n  0.8456249833106995,\n  0.8465625047683716,\n  0.8456249833106995,\n  0.8460937738418579,\n  0.8471875190734863,\n  0.8460937738418579,\n  0.8467187285423279,\n  0.8460937738418579],\n 'loss': [0.587099015712738,\n  0.5043323636054993,\n  0.49291229248046875,\n  0.4851675033569336,\n  0.4765669107437134,\n  0.4628656804561615,\n  0.4448140859603882,\n  0.434997022151947,\n  0.4305644631385803,\n  0.4280011057853699,\n  0.4268389642238617,\n  0.4252129793167114,\n  0.42415112257003784,\n  0.42315542697906494,\n  0.4224167764186859,\n  0.4212895631790161,\n  0.42055901885032654,\n  0.4196596145629883,\n  0.4190589487552643,\n  0.4186345338821411,\n  0.4179089665412903,\n  0.4171048402786255,\n  0.41709598898887634,\n  0.41603508591651917,\n  0.41574805974960327,\n  0.4150635898113251,\n  0.41474324464797974,\n  0.414585679769516,\n  0.41418349742889404,\n  0.413400262594223,\n  0.4131145179271698,\n  0.41280636191368103,\n  0.4120643138885498,\n  0.411873459815979,\n  0.4116706848144531,\n  0.41087889671325684,\n  0.41063782572746277,\n  0.4100559651851654,\n  0.4101380407810211,\n  0.40935635566711426,\n  0.40954744815826416,\n  0.40875479578971863,\n  0.4084790050983429,\n  0.40877583622932434,\n  0.4082517623901367,\n  0.4079892039299011,\n  0.4079314172267914,\n  0.4077092409133911,\n  0.40732958912849426,\n  0.407317191362381,\n  0.40705153346061707,\n  0.40676480531692505,\n  0.4065503180027008,\n  0.40576040744781494,\n  0.406016081571579,\n  0.4057765305042267,\n  0.40553218126296997,\n  0.4054151475429535,\n  0.40456101298332214,\n  0.40492451190948486,\n  0.405172735452652,\n  0.4040481448173523,\n  0.40445899963378906,\n  0.4043702185153961,\n  0.403862863779068,\n  0.4039969742298126,\n  0.40370193123817444,\n  0.403706431388855,\n  0.4038698673248291,\n  0.40355393290519714,\n  0.40350741147994995,\n  0.4035302400588989,\n  0.4036391079425812,\n  0.40251418948173523,\n  0.4026685655117035,\n  0.40230152010917664,\n  0.40217089653015137,\n  0.4031662046909332,\n  0.40233492851257324,\n  0.40203484892845154,\n  0.40277716517448425,\n  0.40144282579421997,\n  0.401630163192749,\n  0.4014296233654022,\n  0.4014571011066437,\n  0.40153735876083374,\n  0.40135619044303894,\n  0.40145954489707947,\n  0.40126994252204895,\n  0.40136927366256714,\n  0.4009941518306732,\n  0.40080422163009644,\n  0.4006332457065582,\n  0.4005151093006134,\n  0.40048766136169434,\n  0.400493323802948,\n  0.3999986946582794,\n  0.4001103341579437,\n  0.4002496302127838,\n  0.4002712368965149],\n 'val_accuracy': [0.7987499833106995,\n  0.7987499833106995,\n  0.7987499833106995,\n  0.7987499833106995,\n  0.7987499833106995,\n  0.7987499833106995,\n  0.7987499833106995,\n  0.7987499833106995,\n  0.828125,\n  0.8237500190734863,\n  0.8287500143051147,\n  0.8299999833106995,\n  0.8287500143051147,\n  0.8293750286102295,\n  0.8293750286102295,\n  0.8262500166893005,\n  0.8268749713897705,\n  0.828125,\n  0.8287500143051147,\n  0.828125,\n  0.8243749737739563,\n  0.8256250023841858,\n  0.8268749713897705,\n  0.8318750262260437,\n  0.828125,\n  0.8293750286102295,\n  0.8299999833106995,\n  0.8293750286102295,\n  0.8318750262260437,\n  0.8299999833106995,\n  0.8287500143051147,\n  0.8331249952316284,\n  0.8299999833106995,\n  0.8337500095367432,\n  0.8318750262260437,\n  0.8318750262260437,\n  0.8299999833106995,\n  0.8324999809265137,\n  0.831250011920929,\n  0.8324999809265137,\n  0.8318750262260437,\n  0.8331249952316284,\n  0.831250011920929,\n  0.8306249976158142,\n  0.8324999809265137,\n  0.8306249976158142,\n  0.831250011920929,\n  0.8318750262260437,\n  0.8287500143051147,\n  0.8306249976158142,\n  0.8331249952316284,\n  0.8318750262260437,\n  0.831250011920929,\n  0.831250011920929,\n  0.824999988079071,\n  0.8318750262260437,\n  0.8299999833106995,\n  0.8287500143051147,\n  0.8293750286102295,\n  0.8287500143051147,\n  0.8306249976158142,\n  0.8318750262260437,\n  0.8287500143051147,\n  0.8299999833106995,\n  0.831250011920929,\n  0.8306249976158142,\n  0.8324999809265137,\n  0.8318750262260437,\n  0.8306249976158142,\n  0.8293750286102295,\n  0.8331249952316284,\n  0.828125,\n  0.8331249952316284,\n  0.8299999833106995,\n  0.8318750262260437,\n  0.8299999833106995,\n  0.831250011920929,\n  0.8306249976158142,\n  0.8306249976158142,\n  0.8318750262260437,\n  0.8306249976158142,\n  0.8306249976158142,\n  0.8324999809265137,\n  0.8287500143051147,\n  0.8306249976158142,\n  0.8287500143051147,\n  0.8318750262260437,\n  0.8324999809265137,\n  0.8306249976158142,\n  0.8299999833106995,\n  0.831250011920929,\n  0.8299999833106995,\n  0.8299999833106995,\n  0.8293750286102295,\n  0.831250011920929,\n  0.8287500143051147,\n  0.8331249952316284,\n  0.831250011920929,\n  0.8331249952316284,\n  0.8306249976158142],\n 'val_loss': [0.5059567093849182,\n  0.49027153849601746,\n  0.481970876455307,\n  0.47640326619148254,\n  0.46632128953933716,\n  0.44881314039230347,\n  0.4400227665901184,\n  0.43443912267684937,\n  0.433121919631958,\n  0.4334633946418762,\n  0.42979174852371216,\n  0.42878958582878113,\n  0.42760762572288513,\n  0.42686566710472107,\n  0.4257444739341736,\n  0.4253101646900177,\n  0.42477214336395264,\n  0.42419853806495667,\n  0.42397046089172363,\n  0.42404597997665405,\n  0.42359963059425354,\n  0.4225429594516754,\n  0.422191858291626,\n  0.42195090651512146,\n  0.42088499665260315,\n  0.42053553462028503,\n  0.42006710171699524,\n  0.41986405849456787,\n  0.4193716049194336,\n  0.4196626543998718,\n  0.41958823800086975,\n  0.4178309142589569,\n  0.41876739263534546,\n  0.41727888584136963,\n  0.4172312617301941,\n  0.4170580804347992,\n  0.41661208868026733,\n  0.4168250262737274,\n  0.41703736782073975,\n  0.4159710705280304,\n  0.4165002107620239,\n  0.41610613465309143,\n  0.41615918278694153,\n  0.4157511591911316,\n  0.4156149923801422,\n  0.41583892703056335,\n  0.4148750305175781,\n  0.41552895307540894,\n  0.4156399667263031,\n  0.4158800542354584,\n  0.41603413224220276,\n  0.41568031907081604,\n  0.4150361716747284,\n  0.4168163537979126,\n  0.4163401424884796,\n  0.41603928804397583,\n  0.415596604347229,\n  0.4157715141773224,\n  0.41731056571006775,\n  0.4157910645008087,\n  0.4147491455078125,\n  0.41446277499198914,\n  0.4143935739994049,\n  0.41537028551101685,\n  0.41529250144958496,\n  0.4147739112377167,\n  0.4151918292045593,\n  0.4138314723968506,\n  0.41443875432014465,\n  0.4148009419441223,\n  0.4142327904701233,\n  0.41481730341911316,\n  0.41388678550720215,\n  0.4144769608974457,\n  0.4128434658050537,\n  0.4136802554130554,\n  0.4148738384246826,\n  0.4143484830856323,\n  0.4135526418685913,\n  0.41586169600486755,\n  0.4142948091030121,\n  0.41388970613479614,\n  0.41396600008010864,\n  0.4138972759246826,\n  0.4130733013153076,\n  0.4138404428958893,\n  0.4133797883987427,\n  0.41347354650497437,\n  0.4149211049079895,\n  0.4147145450115204,\n  0.41326725482940674,\n  0.41573402285575867,\n  0.41531437635421753,\n  0.415111780166626,\n  0.41460347175598145,\n  0.4145154058933258,\n  0.41485121846199036,\n  0.41519954800605774,\n  0.4149777889251709,\n  0.41499072313308716]}"},"metadata":{}}]},{"cell_type":"code","source":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:01:56.620404Z","iopub.execute_input":"2024-06-29T15:01:56.620834Z","iopub.status.idle":"2024-06-29T15:01:56.879188Z","shell.execute_reply.started":"2024-06-29T15:01:56.620801Z","shell.execute_reply":"2024-06-29T15:01:56.877949Z"},"trusted":true},"execution_count":78,"outputs":[{"execution_count":78,"output_type":"execute_result","data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7ff29f37c9a0>]"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"#from the above graph, we get the idea of overfitting.\n","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:02:43.759825Z","iopub.execute_input":"2024-06-29T15:02:43.760217Z","iopub.status.idle":"2024-06-29T15:02:43.765600Z","shell.execute_reply.started":"2024-06-29T15:02:43.760188Z","shell.execute_reply":"2024-06-29T15:02:43.764198Z"},"trusted":true},"execution_count":79,"outputs":[]},{"cell_type":"code","source":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:03:56.111039Z","iopub.execute_input":"2024-06-29T15:03:56.111529Z","iopub.status.idle":"2024-06-29T15:03:56.324591Z","shell.execute_reply.started":"2024-06-29T15:03:56.111480Z","shell.execute_reply":"2024-06-29T15:03:56.323287Z"},"trusted":true},"execution_count":80,"outputs":[{"execution_count":80,"output_type":"execute_result","data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7ff29d1e21a0>]"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"#As we can see the gap betweent the plot, we can say some sort of overfitting is there.","metadata":{"execution":{"iopub.status.busy":"2024-06-29T15:04:59.555721Z","iopub.execute_input":"2024-06-29T15:04:59.556222Z","iopub.status.idle":"2024-06-29T15:04:59.561678Z","shell.execute_reply.started":"2024-06-29T15:04:59.556184Z","shell.execute_reply":"2024-06-29T15:04:59.560236Z"},"trusted":true},"execution_count":81,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}